# 백준 14500 : 테르토피노

n,m = map(int, input().split())
board = [list(map(int,input().split())) for _ in range(n)]

tertomino = [
    # ─ shape
    [(0,0), (0,1), (0,2), (0,3)],
    [(0,0), (1,0), (2,0), (3,0)],
    # ㅁ shape
    [(0,0), (0,1), (1,0), (1,1)],
    # L shape
    [(0,0), (1,0), (2,0), (2,1)],
    [(0,1), (1,1), (2,1), (2,0)],
    [(0,0), (0,1), (1,1), (2,1)],
    [(0,0), (0,1), (1,0), (2,0)],
    [(0,0), (0,1), (0,2), (1,0)],
    [(0,0), (0,1), (0,2), (1,2)],
    [(0,2), (1,0), (1,1), (1,2)],
    [(0,0), (1,0), (1,1), (1,2)],
    # thunder shape
    [(0,0), (1,0), (1,1), (2,1)],
    [(0,1), (1,1), (1,0), (2,0)],
    [(0,0), (0,1), (1,1), (1,2)],
    [(1,0), (1,1), (0,1), (0,2)],
    # ㅗ
    [(0,0), (0,1), (0,2), (1,1)],
    [(0,1), (1,0), (1,1), (2,1)],
    [(1,0), (1,1), (1,2), (0,1)],
    [(0,0), (1,0), (1,1), (2,0)],
]

max_res = 0

for i in range(n):
    for j in range(m):
        for shape in tertomino:
            try:
                total = sum(board[i + x][j + y] for x, y in shape)
                max_res = max(max_res, total)
            except IndexError:
                continue

print(max_res)